                    Compositional CompCert
                    ======================

OVERVIEW: 

This directory contains files accompanying the POPL submission

                    Compositional CompCert.

The files are distributed as a modification of standard CompCert 2.1:
The compiler files are the same but there are two sets of proofs, one
for standard CompCert and the second for Compositional CompCert.  Both
sets of proofs are buildable.

In general, files suffixed with *_coop, *_eff, or *EFF are the
compositional versions of the standard CompCert proofs. The
compositional proofs can typically be found in the same directory as
their standard CompCert counterparts.


BUILDING:

See INSTALL.

FILES:

The files and directories most relevant to the paper are:

cfrontend/ 
  C frontend compiler phases and proofs (SimplLocals, Cshmgen,
  Cminorgen). Files suffixed *_eff.v and *_coop.v gives 
  language definitions. Files suffixed *EFF.v are the compositional 
  compiler phase proofs.

backend/ 
  Backend compiler phases and proofs (Selection, RTLgen, Tailcall,
  Renumbering, Allocation, Tunneling, Linearize, CleanupLabels,
  Stacking, Asmgen). Files suffixed *_eff.v and *_coop.v gives language
  definitions. Files suffixed *EFF.v are the compositional compiler
  phase proofs.

core/
  core_semantics.v: defines interaction semantics, Sec. 2 
  StructuredInjections.v: structured injections, Sec. 4
  effect_simulations.v: structured simulations, Sec. 4
    Concordance: 
    * [replace_locals] is the function named "export" in the paper.
    * [replace_externs] is the function named "import" in the paper.
  effect_simulations_trans.v: Theorem 1 (transitivity), Sec. 5
  
linking/
  compcert_linking.v: defines linking semantics, Sec. 3. 
    The linking semantics (\mathcal{L}) is defined twice: 
    First as a function (to Prop), and then as an inductive 
    relation. The two versions are proved to coincide.
  linking_spec.v: states Theorem 2, Sec. 5
  linking_proof.v: proves Theorem 2, Sec. 5. 
    The two main subproofs (for the call/return cases, resp.) are:
    * linking/call_lemmas.v
    * linking/ret_lemmas.v
    The file linking/linking_inv.v states the main linking 
    simulation invariant.
  rc_semantics.v: defines reach-closed semantics, Sec. 5
  context_equiv.v: defines reach-closed contextual equivalence and
    proves Corollary 1, Sec. 5

driver/
  CompositionalCompiler.v: proves Theorem 3, Sec. 6
  CompositionalComplements.v: proves Corollary 2, Sec. 6

scripts/
  Contains the shell scripts used to calculate the line counts in
  Sec. 6. In general, we calculate lines of spec. vs. proof 
  by first classifying whole files as either spec. or proof, 
  and then just use wc. The coqwc tool is an alternative, but 
  it often seems to undercount proof lines and overcount 
  spec. lines. 

  For some specification files (e.g., backend/RTL.v), we do not count
  in our "new" line counts those parts of the file, such as
  definitions of operational semantics, that are duplicated in our own
  files (e.g., backend/RTL_coop.v).

  The current line counts are slightly lower than those listed 
  in the paper. We added the line counts to the paper a few 
  days before the deadline and have since removed some dead 
  comments, definitions, and lemmas. 



BELOW is the README distributed with CompCert 2.1, including copyright
notices:

                The CompCert C verified compiler

OVERVIEW:

The CompCert C verified compiler is a compiler for a large subset of the
C programming language that generates code for the PowerPC, ARM and x86
processors.

The distinguishing feature of CompCert is that it has been formally
verified using the Coq proof assistant: the generated assembly code is
formally guaranteed to behave as prescribed by the semantics of the
source C code.

CompCert is an ongoing research project.  The present release is an
advanced prototype intended for research, educational and evaluation
purposes.

For more information on CompCert (supported platforms, supported C
features, installation instructions, using the compiler, etc), please
refer to the user's manual: http://compcert.inria.fr/man/


COPYRIGHT:

The CompCert verified compiler is Copyright 2004, 2005, 2006, 2007,
2008, 2009, 2010, 2011, 2012, 2013 Institut National de Recherche en
Informatique et en Automatique (INRIA).  It is distributed under the
conditions stated in file LICENSE.


CONTACT:

The authors can be contacted by e-mail at compcert@yquem.inria.fr

